diff --git a/madgraph/interface/amcatnlo_run_interface.py b/madgraph/interface/amcatnlo_run_interface.py
index f8b611b..2aff879 100755
--- a/madgraph/interface/amcatnlo_run_interface.py
+++ b/madgraph/interface/amcatnlo_run_interface.py
@@ -3971,8 +3971,8 @@ RESTART = %(mint_mode)s
             arg_list = [[shower, out_id, self.run_name]]
 
         self.run_all({rundir: 'shower.sh'}, arg_list, 'shower')
-        self.njobs = 1
-        self.wait_for_complete('shower')
+        #self.njobs = 1
+        #self.wait_for_complete('shower')
 
         # now collect the results
         message = ''
@@ -4822,7 +4822,8 @@ RESTART = %(mint_mode)s
                 [(cwd, exe)] = list(job_dict.items())
                 self.run_exe(exe, args, run_type, cwd)
         
-        self.wait_for_complete(run_type)
+        if self.njobs:
+            self.wait_for_complete(run_type)
 
 
 


diff --git a/madgraph/various/cluster.py b/madgraph/various/cluster.py
index 48762f0..ec4fc1b
--- a/madgraph/various/cluster.py
+++ b/madgraph/various/cluster.py
@@ -28,13 +28,19 @@ from six.moves import input
 logger = logging.getLogger('madgraph.cluster') 
 
 try:
-    from madgraph import MadGraph5Error
+    from madgraph import MadGraph5Error, MG5DIR
     import madgraph.various.misc as misc
+    MADEVENT=False
 except Exception as error:
     if __debug__:
         print(str(error))
     from internal import MadGraph5Error
     import internal.misc as misc
+    MADEVENT=True
+    LOCALDIR = os.path.realpath(os.path.join(os.path.dirname(__file__), os.path.pardir,
+                                                                os.path.pardir))
+
+
 
 pjoin = os.path.join
    
@@ -689,8 +695,8 @@ class MultiCore(Cluster):
                     continue
             except six.moves.queue.Empty:
                 continue
-            
-            
+        import threading
+        self.demons.remove(threading.current_thread())  
             
     
     def submit(self, prog, argument=[], cwd=None, stdout=None, stderr=None,
@@ -751,8 +757,6 @@ class MultiCore(Cluster):
             out = os.system('CPIDS=$(pgrep -P %(pid)s); kill -15 $CPIDS > /dev/null 2>&1' \
                             % {'pid':pid} )
             out = os.system('kill -15 %(pid)s > /dev/null 2>&1' % {'pid':pid} )   
-            
-        self.demons.clear()               
 
 
     def wait(self, me_dir, update_status, update_first=None):
@@ -840,6 +844,7 @@ class MultiCore(Cluster):
                 elif self.fail_msg:
                     misc.sprint(self.fail_msg)
                     six.reraise(self.fail_msg[0], self.fail_msg[1], self.fail_msg[2])
+                #else can happen if nothing was submitted
             # reset variable for next submission
             try:
                 self.lock.clear()
@@ -868,7 +873,6 @@ class MultiCore(Cluster):
 
         if not self.keep_thread:
             self.stoprequest.set()
-            self.demons.clear()
 
 class CondorCluster(Cluster):
     """Basic class for dealing with cluster submission"""
@@ -1683,8 +1687,14 @@ class SLURMCluster(Cluster):
         """Submit a job prog to a SLURM cluster"""
         
         me_dir = self.get_jobs_identifier(cwd, prog)
-        
-        
+        import sys
+        if prog == sys.executable:
+            argument.insert(0, prog)
+            if MADEVENT:
+                prog = pjoin(LOCALDIR,'bin','internal','eval.sh') 
+            else:
+                prog = pjoin(MG5DIR, 'Template','Common','bin','internal','eval.sh')
+
         if cwd is None:
             cwd = os.getcwd()
         if stdout is None:
@@ -1700,10 +1710,13 @@ class SLURMCluster(Cluster):
                    '-J', me_dir, 
                    '-e', stderr, prog] + argument
 
+
+
         if self.cluster_queue and self.cluster_queue != 'None':
                 command.insert(1, '-p')
                 command.insert(2, self.cluster_queue)
 
+
         a = misc.Popen(command, stdout=subprocess.PIPE, 
                                       stderr=subprocess.STDOUT,
                                       stdin=subprocess.PIPE, cwd=cwd)
